{"version":3,"sources":["components/ModalWindow.js","pages/meal_detail.js","pages/add_meal.js","components/Search.js","components/Recipes.js","components/Filter.js","components/LoginModal.js","pages/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["ModalWindow","props","useState","show","setShow","meal","mealState","setMealState","setRes","handleClose","onChange","e","name","target","id","value","updatedState","onChangeArray","findIndex","a","item","removeInputField","index","splice","addField","key","uuidv4","ingredients","instructions","Button","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","defaultValue","cuisine","map","ingredient","Row","nogutters","Col","lg","variant","className","instruction","Footer","preventDefault","url","_id","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","res","json","setMeal","statusMessage","catch","console","log","Meal","setStatusMessage","user","parse","localStorage","getItem","React","useEffect","match","params","response","Accordian","Accordion","Toggle","as","eventKey","Collapse","ListGroup","ListGroupItem","Container","loggedIn","difficulty","disabled","window","setTimeout","location","href","Alert","addMeal","handleMultiChange","inputElements","document","getElementById","getElementsByTagName","inputs","i","length","input","push","setState","state","addInputField","renderInputFields","formInputs","onSubmit","nodeArr","childNodes","ingredientsCount","instructionsCount","this","Component","Search","handleChange","items","InputGroup","FormControl","placeholder","to","Recipes","Card","style","width","Img","src","Text","TagFilter","handleSubmit","handleStateChange","handleClick","parentNode","textContent","requestSent","ButtonGroup","reloadWindowIfLoginSuccessful","setItem","token","Meals","logout","loadRecipes","App","filter","term","removeItem","authUser","Switch","path","component","render","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.491de6af.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction ModalWindow (props) {\n  const [show, setShow] = useState(false);\n  const [mealState, setMealState] = useState(props.meal);\n  const [res, setRes] = useState();\n\n  const handleShow = () => {\n    setShow(true);\n  };\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const onSubmit = (e) => {\n    setShow(false);\n    e.preventDefault();\n    const url = `http://localhost:9000/recipe/${mealState._id}`\n    const request = new Request(url, {\n      method: 'POST',\n      body: JSON.stringify(mealState),\n      headers: new Headers({\n          'Content-Type': 'application/json'\n      })\n    });\n\n    fetch(request)\n    .then(res => res.json())\n    .then(res => props.setMeal(res.meal))\n    .then(res => setRes(res.statusMessage))\n    .catch(res => console.log(res));\n  };\n\n  const onChange = (e) => {\n    const name = e.target.id ;\n    const value = e.target.value;\n    const updatedState = {...mealState};\n    updatedState[name] = value\n    setMealState(updatedState)\n  };\n\n  const onChangeArray = (e) => {\n    const id = e.target.id;\n    const value = e.target.value;\n    const updatedState = {...mealState};\n    const array = updatedState[id];\n    const index = mealState[id].findIndex((a) => {return a.item == e.target.name})\n    array[index].item = value;\n    setMealState(updatedState);\n  };\n\n  const removeInputField = (e) => {\n    const updatedState = {...mealState};\n    const name = e.target.name;\n    const index = mealState[name].findIndex((a) => {return a.item == e.target.id});\n    updatedState[name].splice(index, 1);\n    setMealState(updatedState);\n  };\n\n  const addField = (e) => {\n    const updatedState = {...mealState};\n    const name = e.target.name;\n    updatedState[name] = [...mealState[name], {item: \"\", key: uuidv4()}];\n    setMealState(updatedState);\n  };\n\n  const EditForm = () => {\n    return (\n        <Form>\n            <Form.Group controlId=\"name\" onChange={(e) => {onChange(e)}}>\n                <Form.Label>Meal name</Form.Label>\n                <Form.Control type=\"text\" defaultValue={`${mealState.name  || \"\"}`}/>\n            </Form.Group>\n            <Form.Group controlId=\"cuisine\" onChange={(e) => {onChange(e)}}>\n                <Form.Label>Cuisine</Form.Label>\n                <Form.Control type=\"text\" defaultValue={`${mealState.cuisine  || \"\"}`}/>\n            </Form.Group>\n            <Form.Group controlId=\"ingredients\" onChange={onChangeArray}>\n                <Form.Label>Ingredients</Form.Label>\n                {mealState.ingredients.map((ingredient, index) => {\n                  return (\n                    <Row key={ingredient.key} nogutters=\"true\">\n                      <Col nogutters=\"true\" lg=\"auto\">\n                        <Form.Control type=\"text\" name={ingredient.item} defaultValue={ingredient.item}/>\n                      </Col>\n                      <Col nogutters=\"true\" lg=\"auto\">\n                        <Button variant=\"link\" className=\"removeFormField\" id={ingredient.item} name=\"ingredients\" onClick={removeInputField}>x</Button>\n                      </Col>\n                    </Row>\n                  )\n                })} \n              <Button name=\"ingredients\" onClick={addField}>Add</Button>\n            </Form.Group>\n            <Form.Group controlId=\"instructions\" onChange={onChangeArray}>\n                <Form.Label>Instructions</Form.Label>\n                {mealState.instructions.map((instruction, index) => {\n                  return (\n                    <Row key={instruction.key} nogutters=\"true\">\n                      <Col nogutters=\"true\" lg=\"auto\">\n                      <Form.Control type=\"text\" name={instruction.item} defaultValue={instruction.item}/>\n                      </Col>\n                      <Col nogutters=\"true\" lg=\"auto\">\n                        <Button variant=\"link\" className=\"removeFormField\" id={instruction.item} name=\"instructions\" onClick={removeInputField}>x</Button>\n                      </Col>\n                    </Row>\n                  )\n                })}\n                <Button name=\"instructions\" onClick={addField}>Add</Button>\n            </Form.Group>\n        </Form>\n    )\n  };\n\n  if (mealState.ingredients && mealState.instructions) {\n    return (\n      <>\n        <Button onClick = {handleShow}>Edit</Button>\n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Modal title</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {EditForm()}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={onSubmit}>Save</Button>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n  )\n  }\n\n  return <></>\n};\n\nexport default ModalWindow","import React, { Component, useState } from 'react';\nimport { Accordion, Alert, Button, Card, Container, FormGroup, ListGroup, ListGroupItem, Row } from 'react-bootstrap';\nimport ModalWindow from '../components/ModalWindow';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nfunction Meal(props) {\n  const [mealState, setMeal] = useState();\n  const [statusMessage, setStatusMessage] = useState()\n  const user = JSON.parse(localStorage.getItem('token'));\n\n  \n  React.useEffect(() => {\n    fetch(`http://localhost:9000/recipe/${props.match.params.id}/`)\n    .then(response => response.json())\n    .then(meal => setMeal(meal));\n  },[props.match.params.id])\n\n  const handleDelete = (e) => {\n    e.target.disabled = true;\n\n    const url = `http://localhost:9000/recipe/${mealState._id}/delete`;\n\n    const request = new Request(url, {\n      method: 'DELETE'\n    });\n\n    fetch(request)\n    .then(res => res.json())\n    .then(res => setStatusMessage({statusMessage}))\n    .then(window.setTimeout(function() {\n      window.location.href = '/recipes';\n    }, 100))\n    .catch(res => setStatusMessage({statusMessage}));\n  };\n\n  const Accordian = () => {\n    return (\n          <Accordion>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                  Steps\n              </Accordion.Toggle>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                  Ingredients\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n              <ListGroup>\n                {mealState.instructions && mealState.instructions.map(instruction => (\n                        <ListGroupItem key={uuidv4()}>\n                            {instruction.item}\n                        </ListGroupItem>\n                ))}\n            </ListGroup>\n                </Accordion.Collapse>\n                <Accordion.Collapse eventKey=\"1\">\n              <ListGroup>\n                {mealState.ingredients && mealState.ingredients.map(ingredient => (\n                  <ListGroupItem key={uuidv4()}>\n                            {ingredient.item}\n                        </ListGroupItem>\n                ))}\n            </ListGroup>\n                </Accordion.Collapse>\n            </Accordion>\n    )\n  };\n\n  if (mealState && user != null) {\n\n  return (\n    <Container>\n      <Row>\n        <h1>{props.loggedIn}</h1>\n        <h1 className=\"primary\">{mealState.name}</h1>\n      </Row>\n      <Row>\n        <h5 className=\"secondary\">{mealState.cuisine}</h5>\n        <h5 className=\"secondary\">{mealState.difficulty}</h5>\n      </Row>\n      <Row>\n      <ModalWindow meal = {mealState} setMeal={setMeal}/>\n        <Button onClick={handleDelete}>Delete</Button>\n        </Row>\n          <Row>\n          <Alert>{statusMessage}</Alert>\n          </Row>\n          <Row>\n            {Accordian()}\n       </Row>\n    </Container>\n  )}\n\n  else if (mealState) {\n    return (\n        <Container>\n      <Row>\n        <h1>{props.loggedIn}</h1>\n        <h1 className=\"primary\">{mealState.name}</h1>\n      </Row>\n      <Row>\n        <h5 className=\"secondary\">{mealState.cuisine}</h5>\n        <h5 className=\"secondary\">{mealState.difficulty}</h5>\n      </Row>\n      <Row>\n        {Accordian()}\n       </Row>\n    </Container>\n  )};\n\n  return (\n    <></>\n  )\n};\n\nexport default Meal;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Alert } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass addMeal extends Component {\n  constructor() {\n    super()\n    this.state = {\n      res: [],\n      ingredientsCount: 1,\n      instructionsCount: 1\n    }\n  };\n\n  handleMultiChange = (e) => {\n    const key = e.target.id;\n    const inputElements = document.getElementById(key).getElementsByTagName(\"input\");\n    const inputs = [];\n    for (let i = 0; i < inputElements.length; i++) {\n      const input = inputElements[i].value;\n      inputs.push({item: [input], key: uuidv4()});\n    }\n    this.setState({[key]: inputs})\n    console.log(this.state);\n  }\n\n  addInputField = (e) => {\n    const key = e.target.name + \"Count\";\n    this.setState({[key]: this.state[key] + 1})\n  }\n\n  renderInputFields = (name) => {\n    const formInputs = [];\n    const key = name + \"Count\";\n    for (let i = 0; i < this.state[key]; i++){\n      formInputs.push(<Form.Control type=\"text\"/>)\n    }\n\n    return formInputs\n  }\n\n  onChange = (e) => {\n    const name = e.target.id ;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onSubmit = (e) => {\n    const nodeArr = e.target.childNodes;\n    nodeArr[nodeArr.length - 1].disabled = true;\n    e.preventDefault();\n    const url = 'http://localhost:9000/addMeal';\n\n    const request = new Request(url, {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: new Headers({\n          'Content-Type': 'application/json'\n      })\n    });\n\n    fetch(request)\n    .then(res => res.json())\n    .then(res => this.setState({res}))\n     .then(window.setTimeout(function() {\n      window.location.href = '/';\n    }, 1500))\n    .catch(res => this.setState({res}));\n  };\n\n  render() {\n  let statusMessage = null;\n  if (this.state.res.statusMessage) { statusMessage = this.state.res.statusMessage};\n\n  return (\n    <Form onSubmit={this.onSubmit}>\n        <Form.Group controlId=\"name\" onChange={this.onChange}>\n            <Form.Label>Meal name</Form.Label>\n            <Form.Control type=\"text\"/>\n        </Form.Group>\n        <Form.Group controlId=\"cuisine\" onChange={this.onChange}>\n            <Form.Label>Cuisine</Form.Label>\n            <Form.Control type=\"text\"/>\n        </Form.Group>\n        <Form.Group controlId=\"difficulty\" onChange={this.onChange}>\n            <Form.Label>Difficulty</Form.Label>\n            <Form.Control type=\"text\"/>\n        </Form.Group>\n        <Form.Group controlId=\"ingredients\" id=\"ingredients\" onChange={this.handleMultiChange}>\n            <Form.Label>Ingredients</Form.Label>\n            {this.renderInputFields(\"ingredients\")}\n            <Button name=\"ingredients\" onClick={this.addInputField}>Add ingredient</Button>\n        </Form.Group>\n        <Form.Group controlId=\"instructions\" id=\"instructions\" onChange={this.handleMultiChange}>\n            <Form.Label>Instructions</Form.Label>\n            {this.renderInputFields(\"instructions\")}\n            <Button name=\"instructions\" onClick={this.addInputField}>Add instruction</Button>\n        </Form.Group>\n        <Button variant=\"primary\" id = \"submit\" type=\"submit\">\n          Submit\n        </Button>\n        <Alert>{statusMessage}</Alert>\n    </Form>\n  )\n  };\n};\n\n/* name: {type: String, required: true},\ningredients: {type: [String], required: true},\ncuisine: {type: String, required: true},\ndifficulty: {type: String},\ndescription: {type: String},\ninstructions: {type: String},\ntags: {type: [String]} */\n\nexport default addMeal;\n","import React, { Component } from 'react';\nimport { Container, FormControl, InputGroup, ListGroup, ListGroupItem, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Search extends Component {\n    constructor() {\n        super()\n        this.state = {\n            items: []\n        }\n      }\n     \n    handleChange = (e) => {\n        e.preventDefault();\n        if (e.target.value.length < 3) {\n            this.setState({\n                items: []\n            })\n            return\n        }\n\n        fetch(`http://localhost:9000/search?name=${e.target.value}`)\n            .then(response => response.json())\n            .then(items => this.setState({ items }));\n    }\n\n    render() {\n        \n    return (\n        <Container> \n                <InputGroup className=\"mb-3\">\n                    <FormControl onChange={this.handleChange}\n                    placeholder=\"Begin typing the dish you want\"\n                    />\n                </InputGroup>\n                <ListGroup>\n                    {this.state.items.map(item => (\n                <ListGroupItem key={uuidv4()}>\n                    <Link to={`/recipe/${item._id}`}>{item.name}</Link>\n                </ListGroupItem>\n                ))}\n                </ListGroup>\n        </Container>\n    )}\n}\n\nexport default Search;","import React from 'react';\nimport { Button, Card, Container, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Recipes(props) {\n    return (\n        <Container>\n           <Row>\n                {props.items.map(item => (\n                    <Card style={{ width: '15rem' }} key={uuidv4()}>\n                        <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n                        <Card.Body>\n                            <Card.Title>{item.name}</Card.Title>\n                            <Card.Text>\n                            Some quick example text to build on the card title and make up the bulk of\n                            the card's content.\n                            </Card.Text>\n                            <Link to={`/recipe/${item._id}`} variant=\"primary\">More details</Link>\n                        </Card.Body>\n                    </Card>\n                ))}\n            </Row>\n       </Container>\n\n    )\n} \n\nexport default Recipes; ","import React, { Component, useState } from 'react';\nimport {Accordion, Button, ButtonGroup} from 'react-bootstrap'\n\n \nclass TagFilter extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            requestSent: false\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(`http://localhost:9000/tags/tags?cuisine=${this.state.cuisine}&difficulty=${this.state.difficulty}`)\n        .then(response => response.json())\n        .then(items => {this.props.handleStateChange(items)})\n    }\n\n    handleClick = (e) => {\n        this.setState({[e.target.parentNode.id]: e.target.textContent});\n    }\n\n    render() {\n    return ( \n        <Accordion>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                Difficulty\n            </Accordion.Toggle>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                Cuisine\n            </Accordion.Toggle>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                <Button onClick={this.handleSubmit} type=\"submit\" value=\"Submit\">Search</Button>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"0\">\n                <ButtonGroup id=\"difficulty\">\n                    <Button onClick={this.handleClick} className=\"tags\" variant=\"secondary\">Easy</Button>\n                    <Button onClick={this.handleClick} className=\"tags\"  variant=\"secondary\">Medium</Button>\n                    <Button onClick={this.handleClick} className=\"tags\" variant=\"secondary\">Hard</Button>\n                </ButtonGroup>\n            </Accordion.Collapse>\n            <Accordion.Collapse eventKey=\"1\">\n            <ButtonGroup id=\"cuisine\">\n                <Button onClick={this.handleClick} className=\"tags\" variant=\"secondary\">Italian</Button>\n                <Button onClick={this.handleClick} className=\"tags\"  variant=\"secondary\">Mexican</Button>\n                <Button onClick={this.handleClick} className=\"tags\" variant=\"secondary\">English</Button>\n            </ButtonGroup>\n            </Accordion.Collapse>\n            <Accordion.Collapse eventKey=\"2\">\n            <ButtonGroup></ButtonGroup>\n            </Accordion.Collapse>\n        </Accordion>\n    )\n}}\n\nexport default TagFilter;\n","import React, { useState } from 'react';\nimport { Alert, Button, Form, Modal } from 'react-bootstrap';\n\nfunction ModalWindow (props) {\n  const [show, setShow] = useState(false);\n  const [state, setState] = useState();\n  const [statusMessage, setStatusMessage] = useState(\"testing\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const url = `http://localhost:9000/login`\n    const request = new Request(url, {\n      method: 'POST',\n      body: JSON.stringify(state),\n      headers: new Headers({\n          'Content-Type': 'application/json'\n      })\n    });\n\n    fetch(request)\n    .then(res => res.json())\n    .then(res => handleStateChange(res))\n    .catch(res => setStatusMessage(res));\n  };\n\n  const handleStateChange = (res) => {\n    setStatusMessage(res.response);\n    reloadWindowIfLoginSuccessful(res);\n  }\n\n  const reloadWindowIfLoginSuccessful = (res) => {\n    if (res.response == \"Login successful\") {\n      window.setTimeout(function() {\n        handleClose();\n      }, 500);\n      localStorage.setItem('token',  JSON.stringify(res.token))\n      props.setState({loggedIn: true});\n      return      \n    }\n  };\n\n  const onChange = (e) => {\n    const name = e.target.id ;\n    const value = e.target.value;\n    const updatedState = {...state};\n    updatedState[name] = value\n    setState(updatedState)\n  };\n\n  const EditForm = () => {\n    return (\n        <Form onChange={(e) => {onChange(e)}}>\n            <Form.Group controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"text\" />\n            </Form.Group>\n        </Form>\n    )\n  };\n\n  return (\n      <>\n        <Button onClick = {handleShow}>Login</Button>\n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Modal title</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {EditForm()}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={onSubmit}>Login</Button>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>            \n          </Modal.Footer>\n          <Alert>{statusMessage}</Alert>\n        </Modal>\n      </>\n  )\n};\n\nexport default ModalWindow","import React, { Component, useState } from 'react';\nimport { Accordion, Alert, Button, Container, ListGroup, ListGroupItem, Row, Col } from 'react-bootstrap';\nimport ModalWindow from '../components/ModalWindow';\nimport Search from '../components/Search';\nimport Recipes from '../components/Recipes';\nimport TagFilter from '../components/Filter';\nimport Login from '../components/LoginModal';\nimport {Route, BrowserRouter as Router, Link} from 'react-router-dom';\n\n\nfunction Meals(props) {\n  const user = props.state.loggedIn\n  //const [user, setUser] = useState();\n\n  if (user) {\n    return (\n      <Container>\n    <Row>\n      <Link to='/addMeal'>Add meal</Link>\n      <Button onClick={props.logout}>Logout</Button>\n    </Row>\n    <Row>\n      <Search />\n    </Row>\n    <Row>\n      <TagFilter handleStateChange = {props.handleStateChange} />\n    </Row>\n    <Row>\n      <Recipes items={props.state.items} loggedIn={props.state.loggedIn} />\n    </Row>\n    <Row>\n      <Button onClick={() =>{props.loadRecipes()}}>View more</Button>\n    </Row>\n  </Container>\n)\n  }\n\n  else {\n  return (\n                  <Container>\n                <Row>\n                  <Login setState={state => props.setState(state)}/>\n                </Row>\n                <Row>\n                  <Search />\n                </Row>\n                <Row>\n                  <TagFilter handleStateChange = {props.handleStateChange} />\n                </Row>\n                <Row>\n                  <Recipes items={props.state.items} loggedIn={props.state.loggedIn} />\n                </Row>\n                <Row>\n                  <Button onClick={() =>{props.loadRecipes()}}>View more</Button>\n                </Row>\n              </Container>\n  )}\n};\n\nexport default Meals;\n","import React, { Component } from 'react';\nimport { Button, Col, Container, Image, Row } from 'react-bootstrap';\nimport {Route, BrowserRouter as Router, Link, Redirect} from 'react-router-dom';\nimport Meal from './pages/meal_detail'\nimport addMeal from './pages/add_meal'\nimport Meals from './pages/Homepage'\nimport Switch from 'react-bootstrap/esm/Switch';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n        items: [],\n        loggedIn: false,\n        authUser: JSON.parse(localStorage.getItem('token')),\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.authUser) this.setState({loggedIn: true});\n    this.loadRecipes();\n  }\n\n  loadRecipes() {\n    fetch(`/recipes`)\n        .then(response => response.json())\n        .then(items => this.setState({items}));\n  }\n\n  handleStateChange = (items, filter, term) => {\n/*     if (items == null) {\n      const filterState = this.state.items.filter(item => item[filter] === term)\n      this.setState({items: filterState})\n      return\n    } */\n    this.setState({ items })\n  }\n\n  logout = () => {\n    localStorage.removeItem('token')\n    this.setState({loggedIn: false, authUser:\"\"})\n  }\n\n  render() {\n  return (\n    <Router>\n        <Switch>\n            <Route path='/addMeal' component={addMeal} />\n            <Route path='/recipe/:id' component={Meal} />\n            <Route path='/recipes' component={() => <Meals logout = {this.logout} handleStateChange={this.handleStateChange} state={this.state} loadRecipes={this.loadRecipes} setState={state => this.setState(state)}/>}/>\n            <Route path=\"/\" render={() => (<Redirect to=\"/recipes\" />)} />    \n        </Switch>\n    </Router>\n  );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './custom.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}