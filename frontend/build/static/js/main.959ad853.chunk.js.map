{"version":3,"sources":["components/ModalWindow.js","pages/meal_detail.js","pages/add_meal.js","components/Search.js","components/Recipes.js","components/Filter.js","pages/Homepage.js","components/LoginModal.js","components/RegisterModal.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["ModalWindow","props","useState","show","setShow","meal","mealState","setMealState","setRes","handleClose","onChange","e","name","target","id","value","updatedState","onChangeArray","findIndex","a","item","removeInputField","index","splice","addField","key","uuidv4","ingredients","instructions","Button","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","defaultValue","cuisine","map","ingredient","Row","nogutters","Col","lg","variant","className","instruction","Footer","preventDefault","url","_id","request","Request","method","body","JSON","stringify","headers","Headers","fetch","then","res","json","setMeal","statusMessage","catch","console","log","Meal","setStatusMessage","user","parse","localStorage","getItem","React","useEffect","match","params","response","Accordian","Accordion","defaultActiveKey","Toggle","as","eventKey","Collapse","ListGroup","ListGroupItem","Container","loggedIn","difficulty","disabled","window","setTimeout","location","href","Alert","addMeal","handleMultiChange","inputElements","document","getElementById","getElementsByTagName","inputs","i","length","input","push","setState","state","addInputField","renderInputFields","formInputs","onSubmit","nodeArr","childNodes","ingredientsCount","instructionsCount","this","Component","Search","handleChange","items","InputGroup","FormControl","placeholder","to","Recipes","Card","style","width","Text","description","TagFilter","handleSubmit","handleStateChange","handleClick","parentNode","textContent","requestSent","ButtonGroup","Meals","reloadWindowIfLoginSuccessful","setItem","token","Nav","Link","RegisterModal","NavigationBar","LoginOption","logout","Navbar","collapseOnSelect","expand","bg","Brand","aria-controls","App","filter","term","removeItem","authUser","loadRecipes","Switch","path","component","render","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.959ad853.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport { Button, Col, Form, Modal, Row } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction ModalWindow (props) {\n  const [show, setShow] = useState(false);\n  const [mealState, setMealState] = useState(props.meal);\n  const [res, setRes] = useState();\n\n  const handleShow = () => {\n    setShow(true);\n  };\n  const handleClose = () => {\n    setShow(false);\n  };\n\n  const onSubmit = (e) => {\n    setShow(false);\n    e.preventDefault();\n    const url = `/recipe/${mealState._id}`\n    const request = new Request(url, {\n      method: 'POST',\n      body: JSON.stringify(mealState),\n      headers: new Headers({\n          'Content-Type': 'application/json'\n      })\n    });\n\n    fetch(request)\n    .then(res => res.json())\n    .then(res => props.setMeal(res.meal))\n    .then(res => setRes(res.statusMessage))\n    .catch(res => console.log(res));\n  };\n\n  const onChange = (e) => {\n    const name = e.target.id ;\n    const value = e.target.value;\n    const updatedState = {...mealState};\n    updatedState[name] = value\n    setMealState(updatedState)\n  };\n\n  const onChangeArray = (e) => {\n    const id = e.target.id;\n    const value = e.target.value;\n    const updatedState = {...mealState};\n    const array = updatedState[id];\n    const index = mealState[id].findIndex((a) => {return a.item == e.target.name})\n    array[index].item = value;\n    setMealState(updatedState);\n  };\n\n  const removeInputField = (e) => {\n    const updatedState = {...mealState};\n    const name = e.target.name;\n    const index = mealState[name].findIndex((a) => {return a.item == e.target.id});\n    updatedState[name].splice(index, 1);\n    setMealState(updatedState);\n  };\n\n  const addField = (e) => {\n    const updatedState = {...mealState};\n    const name = e.target.name;\n    updatedState[name] = [...mealState[name], {item: \"\", key: uuidv4()}];\n    setMealState(updatedState);\n  };\n\n  const EditForm = () => {\n    return (\n        <Form>\n            <Form.Group controlId=\"name\" onChange={(e) => {onChange(e)}}>\n                <Form.Label>Meal name</Form.Label>\n                <Form.Control type=\"text\" defaultValue={`${mealState.name  || \"\"}`}/>\n            </Form.Group>\n            <Form.Group controlId=\"cuisine\" onChange={(e) => {onChange(e)}}>\n                <Form.Label>Cuisine</Form.Label>\n                <Form.Control type=\"text\" defaultValue={`${mealState.cuisine  || \"\"}`}/>\n            </Form.Group>\n            <Form.Group controlId=\"ingredients\" onChange={onChangeArray}>\n                <Form.Label>Ingredients</Form.Label>\n                {mealState.ingredients.map((ingredient, index) => {\n                  return (\n                    <Row key={ingredient.key} nogutters=\"true\">\n                      <Col nogutters=\"true\" lg=\"auto\">\n                        <Form.Control type=\"text\" name={ingredient.item} defaultValue={ingredient.item}/>\n                      </Col>\n                      <Col nogutters=\"true\" lg=\"auto\">\n                        <Button variant=\"link\" className=\"removeFormField\" id={ingredient.item} name=\"ingredients\" onClick={removeInputField}>x</Button>\n                      </Col>\n                    </Row>\n                  )\n                })} \n              <Button variant=\"light\" name=\"ingredients\" onClick={addField}>Add another ingredient</Button>\n            </Form.Group>\n            <Form.Group controlId=\"instructions\" onChange={onChangeArray}>\n                <Form.Label>Instructions</Form.Label>\n                {mealState.instructions.map((instruction, index) => {\n                  return (\n                    <Row key={instruction.key} nogutters=\"true\">\n                      <Col nogutters=\"true\" lg=\"auto\">\n                      <Form.Control type=\"text\" name={instruction.item} defaultValue={instruction.item}/>\n                      </Col>\n                      <Col nogutters=\"true\" lg=\"auto\">\n                        <Button variant=\"link\" className=\"removeFormField\" id={instruction.item} name=\"instructions\" onClick={removeInputField}>x</Button>\n                      </Col>\n                    </Row>\n                  )\n                })}\n                <Button variant=\"light\" name=\"instructions\" onClick={addField}>Add another ingredient</Button>\n            </Form.Group>\n        </Form>\n    )\n  };\n\n  if (mealState.ingredients && mealState.instructions) {\n    return (\n      <>\n        <Button onClick = {handleShow}>Edit</Button>\n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Edit recipe</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {EditForm()}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={onSubmit}>Save</Button>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n  )\n  }\n\n  return <></>\n};\n\nexport default ModalWindow","import React, { Component, useState } from 'react';\nimport { Accordion, Alert, Button, Card, Container, FormGroup, ListGroup, ListGroupItem, Row } from 'react-bootstrap';\nimport ModalWindow from '../components/ModalWindow';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nfunction Meal(props) {\n  const [mealState, setMeal] = useState();\n  const [statusMessage, setStatusMessage] = useState()\n  const user = JSON.parse(localStorage.getItem('token'));\n\n  \n  React.useEffect(() => {\n    fetch(`/recipe/${props.match.params.id}/`)\n    .then(response => response.json())\n    .then(meal => setMeal(meal));\n  },[props.match.params.id])\n\n  const handleDelete = (e) => {\n    e.target.disabled = true;\n\n    const url = `/recipe/${mealState._id}/delete`;\n\n    const request = new Request(url, {\n      method: 'DELETE'\n    });\n\n    fetch(request)\n    .then(res => res.json())\n    .then(res => setStatusMessage({statusMessage}))\n    .then(window.setTimeout(function() {\n      window.location.href = '/recipes';\n    }, 100))\n    .catch(res => setStatusMessage({statusMessage}));\n  };\n\n  const Accordian = () => {\n    return (\n          <Accordion defaultActiveKey=\"0\">\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                  Steps\n              </Accordion.Toggle>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                  Ingredients\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n              <ListGroup>\n                {mealState.instructions && mealState.instructions.map(instruction => (\n                        <ListGroupItem key={uuidv4()}>\n                            {instruction.item}\n                        </ListGroupItem>\n                ))}\n            </ListGroup>\n                </Accordion.Collapse>\n                <Accordion.Collapse eventKey=\"1\">\n              <ListGroup>\n                {mealState.ingredients && mealState.ingredients.map(ingredient => (\n                  <ListGroupItem key={uuidv4()}>\n                            {ingredient.item}\n                        </ListGroupItem>\n                ))}\n            </ListGroup>\n                </Accordion.Collapse>\n            </Accordion>\n    )\n  };\n\n  if (mealState && user != null) {\n\n  return (\n    <Container>\n      <Row>\n        <h1>{props.loggedIn}</h1>\n        <h1 className=\"primary\">{mealState.name}</h1>\n      </Row>\n      <Row>\n        <h5 className=\"secondary\">{mealState.cuisine}</h5>\n        <h5 className=\"secondary\">{mealState.difficulty}</h5>\n      </Row>\n      <Row>\n      <ModalWindow meal = {mealState} setMeal={setMeal}/>\n        <Button onClick={handleDelete}>Delete</Button>\n        </Row>\n          <Row>\n          <Alert>{statusMessage}</Alert>\n          </Row>\n          <Row>\n            {Accordian()}\n       </Row>\n    </Container>\n  )}\n\n  else if (mealState) {\n    return (\n        <Container>\n      <Row>\n        <h1>{props.loggedIn}</h1>\n        <h1 className=\"primary\">{mealState.name}</h1>\n      </Row>\n      <Row>\n        <h5 className=\"secondary\">{mealState.cuisine}</h5>\n        <h5 className=\"secondary\">{mealState.difficulty}</h5>\n      </Row>\n      <Row>\n        <h5 className=\"secondary\">Log in to edit or delete</h5>\n      </Row>\n      <Row>\n        {Accordian()}\n       </Row>\n    </Container>\n  )};\n\n  return (\n    <></>\n  )\n};\n\nexport default Meal;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Alert, Container } from 'react-bootstrap';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass addMeal extends Component {\n  constructor() {\n    super()\n    this.state = {\n      res: [],\n      ingredientsCount: 1,\n      instructionsCount: 1\n    }\n  };\n\n  handleMultiChange = (e) => {\n    const key = e.target.id;\n    const inputElements = document.getElementById(key).getElementsByTagName(\"input\");\n    const inputs = [];\n    for (let i = 0; i < inputElements.length; i++) {\n      const input = inputElements[i].value;\n      inputs.push({item: [input], key: uuidv4()});\n    }\n    this.setState({[key]: inputs})\n    console.log(this.state);\n  }\n\n  addInputField = (e) => {\n    const key = e.target.name + \"Count\";\n    this.setState({[key]: this.state[key] + 1})\n  }\n\n  renderInputFields = (name) => {\n    const formInputs = [];\n    const key = name + \"Count\";\n    for (let i = 0; i < this.state[key]; i++){\n      formInputs.push(<Form.Control type=\"text\"/>)\n    }\n\n    return formInputs\n  }\n\n  onChange = (e) => {\n    const name = e.target.id ;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  onSubmit = (e) => {\n    const nodeArr = e.target.childNodes;\n    nodeArr[nodeArr.length - 1].disabled = true;\n    e.preventDefault();\n    const url = '/addMeal';\n\n    const request = new Request(url, {\n      method: 'POST',\n      body: JSON.stringify(this.state),\n      headers: new Headers({\n          'Content-Type': 'application/json'\n      })\n    });\n\n    fetch(request)\n    .then(res => res.json())\n    .then(res => this.setState({res}))\n     .then(window.setTimeout(function() {\n      window.location.href = '/';\n    }, 1500))\n    .catch(res => this.setState({res}));\n  };\n\n  render() {\n  let statusMessage = null;\n  if (this.state.res.statusMessage) { statusMessage = this.state.res.statusMessage};\n\n  return (\n    <Container>\n    <Form onSubmit={this.onSubmit}>\n        <Form.Group controlId=\"name\" onChange={this.onChange}>\n            <Form.Label>Meal name</Form.Label>\n            <Form.Control type=\"text\"/>\n        </Form.Group>\n        <Form.Group controlId=\"description\" onChange={this.onChange}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control type=\"text\"/>\n        </Form.Group>\n        <Form.Group controlId=\"cuisine\" onChange={this.onChange}>\n            <Form.Label>Cuisine</Form.Label>\n            <Form.Control type=\"text\"/>\n        </Form.Group>\n        <Form.Group controlId=\"difficulty\" onChange={this.onChange}>\n            <Form.Label>Difficulty</Form.Label>\n            <Form.Control type=\"text\"/>\n        </Form.Group>\n        <Form.Group controlId=\"ingredients\" id=\"ingredients\" onChange={this.handleMultiChange}>\n            <Form.Label>Ingredients</Form.Label>\n            {this.renderInputFields(\"ingredients\")}\n            <Button variant=\"light\" name=\"ingredients\" onClick={this.addInputField}>Add ingredient</Button>\n        </Form.Group>\n        <Form.Group controlId=\"instructions\" id=\"instructions\" onChange={this.handleMultiChange}>\n            <Form.Label>Instructions</Form.Label>\n            {this.renderInputFields(\"instructions\")}\n            <Button variant=\"light\" name=\"instructions\" onClick={this.addInputField}>Add instruction</Button>\n        </Form.Group>\n        <Button variant=\"primary\" id = \"submit\" type=\"submit\">\n          Submit\n        </Button>\n        <Alert>{statusMessage}</Alert>\n    </Form>\n    </Container>\n  )\n  };\n};\n\nexport default addMeal;\n","import React, { Component } from 'react';\nimport { Container, FormControl, InputGroup, ListGroup, ListGroupItem, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass Search extends Component {\n    constructor() {\n        super()\n        this.state = {\n            items: []\n        }\n      }\n     \n    handleChange = (e) => {\n        e.preventDefault();\n        if (e.target.value.length < 3) {\n            this.setState({\n                items: []\n            })\n            return\n        }\n\n        fetch(`/search?name=${e.target.value}`)\n            .then(response => response.json())\n            .then(items => this.setState({ items }));\n    }\n\n    render() {\n        \n    return (\n        <Container> \n                <InputGroup className=\"mb-3\">\n                    <FormControl onChange={this.handleChange}\n                    placeholder=\"Begin typing the dish you want\"\n                    />\n                </InputGroup>\n                <ListGroup>\n                    {this.state.items.map(item => (\n                <ListGroupItem key={uuidv4()}>\n                    <Link to={`/recipe/${item._id}`}>{item.name}</Link>\n                </ListGroupItem>\n                ))}\n                </ListGroup>\n        </Container>\n    )}\n}\n\nexport default Search;","import React from 'react';\nimport { Button, Card, Container, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction Recipes(props) {\n    return (\n        <Container>\n           <Row>\n                {props.items.map(item => (\n                    <Card style={{ width: '15rem' }} key={uuidv4()}>\n                        <Card.Body>\n                            <Card.Title>{item.name}</Card.Title>\n                            <Card.Text>{item.description}</Card.Text>\n                            <Link to={`/recipe/${item._id}`} variant=\"primary\">More details</Link>\n                        </Card.Body>\n                    </Card>\n                ))}\n            </Row>\n       </Container>\n\n    )\n} \n\nexport default Recipes; ","import React, { Component } from 'react';\nimport {Accordion, Button, ButtonGroup} from 'react-bootstrap'\n\n \nclass TagFilter extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            requestSent: false\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(`/tags/tags?cuisine=${this.state.cuisine}&difficulty=${this.state.difficulty}`)\n        .then(response => response.json())\n        .then(items => {this.props.handleStateChange(items)})\n    }\n\n    handleClick = (e) => {\n        this.setState({[e.target.parentNode.id]: e.target.textContent});\n    }\n\n    render() {\n    return ( \n        <Accordion className=\"tagFilter\">\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                Difficulty\n            </Accordion.Toggle>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n                Cuisine\n            </Accordion.Toggle>\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\n                <Button id=\"tagSearch\" onClick={this.handleSubmit} type=\"submit\" value=\"Submit\">Search</Button>\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey=\"2\">\n            <ButtonGroup></ButtonGroup>\n            </Accordion.Collapse>\n            <Accordion.Collapse eventKey=\"0\">\n                <ButtonGroup id=\"difficulty\">\n                    <Button onClick={this.handleClick} className=\"tags\" variant=\"secondary\">Easy</Button>\n                    <Button onClick={this.handleClick} className=\"tags\"  variant=\"secondary\">Medium</Button>\n                    <Button onClick={this.handleClick} className=\"tags\" variant=\"secondary\">Hard</Button>\n                </ButtonGroup>\n            </Accordion.Collapse>\n            <Accordion.Collapse eventKey=\"1\">\n            <ButtonGroup id=\"cuisine\">\n                <Button onClick={this.handleClick} className=\"tags\" variant=\"secondary\">Italian</Button>\n                <Button onClick={this.handleClick} className=\"tags\"  variant=\"secondary\">Mexican</Button>\n                <Button onClick={this.handleClick} className=\"tags\" variant=\"secondary\">English</Button>\n            </ButtonGroup>\n            </Accordion.Collapse>\n        </Accordion>\n    )\n}}\n\nexport default TagFilter;\n","import React from 'react';\nimport { Button, Container, Row } from 'react-bootstrap';\nimport Search from '../components/Search';\nimport Recipes from '../components/Recipes';\nimport TagFilter from '../components/Filter';\nimport { Link } from 'react-router-dom';\n\n\nfunction Meals(props) {\n  const user = props.state.loggedIn\n  //const [user, setUser] = useState();\n\n  if (user) {\n    return (\n      <Container>\n        <Row>\n          <Search />\n        </Row>\n        <Row>\n          <Link to='/addMeal'><Button>Add meal</Button></Link>\n        </Row>\n        <Row>\n          <TagFilter handleStateChange = {props.handleStateChange} />\n        </Row>\n        <Row>\n          <Recipes items={props.state.items} loggedIn={props.state.loggedIn} />\n        </Row>\n      </Container>\n    )\n  }\n\n  else {\n  return (\n        <Container>\n          <Row>\n            <Search />\n          </Row>\n          <Row>\n          <h5 className=\"secondary\">Log in to add a meal</h5>\n          </Row>\n          <Row>\n            <TagFilter handleStateChange = {props.handleStateChange} />\n          </Row>\n          <Row>\n            <Recipes items={props.state.items} loggedIn={props.state.loggedIn} />\n          </Row>\n      </Container>\n  )}\n};\n\nexport default Meals;\n","import React, { useState } from 'react';\nimport { Alert, Button, Form, Modal, Nav } from 'react-bootstrap';\n\nfunction ModalWindow (props) {\n  const [show, setShow] = useState(false);\n  const [state, setState] = useState();\n  const [statusMessage, setStatusMessage] = useState();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const url = `/login`\n    const request = new Request(url, {\n      method: 'POST',\n      body: JSON.stringify(state),\n      headers: new Headers({\n          'Content-Type': 'application/json'\n      })\n    });\n\n    fetch(request)\n    .then(res => res.json())\n    .then(res => handleStateChange(res))\n    .catch(res => setStatusMessage(res));\n  };\n\n  const handleStateChange = (res) => {\n    setStatusMessage(res.response);\n    reloadWindowIfLoginSuccessful(res);\n  }\n\n  const reloadWindowIfLoginSuccessful = (res) => {\n    if (res.response == \"Login successful\") {\n      window.setTimeout(function() {\n        handleClose();\n      }, 500);\n      localStorage.setItem('token',  JSON.stringify(res.token))\n      props.setState({loggedIn: true});\n      return      \n    }\n  };\n\n  const onChange = (e) => {\n    const name = e.target.id ;\n    const value = e.target.value;\n    const updatedState = {...state};\n    updatedState[name] = value\n    setState(updatedState)\n  };\n\n  const EditForm = () => {\n    return (\n        <Form onChange={(e) => {onChange(e)}}>\n            <Form.Group controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"text\" />\n            </Form.Group>\n        </Form>\n    )\n  };\n\n  return (\n      <>\n        <Nav.Link onClick = {handleShow}>Login</Nav.Link>\n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Login</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {EditForm()}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={onSubmit}>Login</Button>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>            \n          </Modal.Footer>\n          <Alert>{statusMessage}</Alert>\n        </Modal>\n      </>\n  )\n};\n\nexport default ModalWindow","import React, { useState } from 'react';\nimport { Alert, Button, Form, Modal, Nav } from 'react-bootstrap';\n\nfunction RegisterModal (props) {\n  const [show, setShow] = useState(false);\n  const [state, setState] = useState();\n  const [statusMessage, setStatusMessage] = useState(\"Warning - Demo website\");\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const url = `/register`\n    const request = new Request(url, {\n      method: 'POST',\n      body: JSON.stringify(state),\n      headers: new Headers({\n          'Content-Type': 'application/json'\n      })\n    });\n\n    fetch(request)\n    .then(res => res.json())\n    .then(res => handleStateChange(res))\n    .catch(res => setStatusMessage(res));\n  };\n\n  const handleStateChange = (res) => {\n    setStatusMessage(res.response);\n    reloadWindowIfLoginSuccessful(res);\n  }\n\n  const reloadWindowIfLoginSuccessful = (res) => {\n    if (res.response == \"Registration successful\") {\n      setStatusMessage(\"Please log in with new credentials\")\n      window.setTimeout(function() {\n        handleClose();\n      }, 800);\n      return      \n    }\n  };\n\n  const onChange = (e) => {\n    const name = e.target.id ;\n    const value = e.target.value;\n    const updatedState = {...state};\n    updatedState[name] = value\n    setState(updatedState)\n  };\n\n  const EditForm = () => {\n    return (\n        <Form onChange={(e) => {onChange(e)}}>\n            <Form.Group controlId=\"username\">\n                <Form.Label>Username</Form.Label>\n                <Form.Control type=\"text\" />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"text\" />\n            </Form.Group>\n            <Form.Group controlId=\"password2\">\n                <Form.Label>Confirm password</Form.Label>\n                <Form.Control type=\"text\" />\n            </Form.Group>\n        </Form>\n    )\n  };\n\n  return (\n      <>\n        <Nav.Link onClick = {handleShow}>Register</Nav.Link>\n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Register</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            {EditForm()}\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={onSubmit}>Register</Button>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>            \n          </Modal.Footer>\n          <Alert>{statusMessage}</Alert>\n        </Modal>\n      </>\n  )\n};\n\nexport default RegisterModal;","import React from 'react';\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport Login from './LoginModal';\nimport Register from './RegisterModal';\n\nfunction NavigationBar(props) {\n    const LoginOption = ()=> {\n        if (props.loggedIn) {\n            return <Nav.Link onClick={props.logout}>Logout</Nav.Link>\n        }\n        else {\n            return (\n                <>\n                <Login setState={state => props.setState(state)}/>\n                <Register setState={state => props.setState(state)}/>\n                </>\n            )\n        }\n    }\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n        <Container>\n        <Navbar.Brand href=\"/\">Home</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse>\n            <Nav className=\"me-auto\">\n            <LoginOption />\n            </Nav>\n        </Navbar.Collapse>\n        <Navbar.Collapse className=\"justify-content-end\">\n            <Nav>\n            <Nav.Link href='https://github.com/aslan011/recipesMERN' target=\"_blank\">See the code</Nav.Link>\n            </Nav>\n        </Navbar.Collapse>\n        </Container>\n        </Navbar>\n    )\n};\n\nexport default NavigationBar;","import React, { Component } from 'react';\nimport {Route, BrowserRouter as Router, Redirect} from 'react-router-dom';\nimport Meal from './pages/meal_detail'\nimport addMeal from './pages/add_meal'\nimport Meals from './pages/Homepage'\nimport Switch from 'react-bootstrap/esm/Switch';\nimport Navbar from './components/NavBar';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n        items: [],\n        loggedIn: false,\n        authUser: JSON.parse(localStorage.getItem('token'))\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.authUser) this.setState({loggedIn: true});\n    this.loadRecipes();\n  }\n\n  loadRecipes() {\n    fetch(`/recipes`)\n        .then(response => response.json())\n        .then(items => this.setState({items}));\n  }\n\n  handleStateChange = (items, filter, term) => {\n    this.setState({ items })\n  }\n\n  logout = () => {\n    localStorage.removeItem('token')\n    this.setState({loggedIn: false, authUser:\"\"})\n  }\n\n  render() {\n  return (\n    <>\n    <Navbar loggedIn={this.state.loggedIn} setState={state => this.setState(state)} logout = {this.logout}/>\n    <Router>\n        <Switch>\n            <Route path='/addMeal' component={addMeal} />\n            <Route path='/recipe/:id' component={Meal} />\n            <Route path='/recipes' component={() => <Meals logout = {this.logout} handleStateChange={this.handleStateChange} state={this.state} loadRecipes={this.loadRecipes} setState={state => this.setState(state)}/>}/>\n            <Route path=\"/\" render={() => (<Redirect to=\"/recipes\" />)} />    \n        </Switch>\n    </Router>\n    </>\n  );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './custom.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}